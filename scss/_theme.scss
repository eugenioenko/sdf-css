/**
 * Theme
 */
// color themes from $color-types variable
 @each $color in $color-types{
    .#{$sdf}-#{$color}{
        background-color: color-get($color, background);
        color: color-get($color, contrast);
        &.#{$sdf}-hover,
        &.#{$sdf}-btn:hover,
        &.#{$sdf}-btn:focus{
            background-color: darken(saturate(color-get($color, background), $color-multiplier*3), $color-multiplier);
        }
        .#{$sdf}-list-item{
            background-color: color-get($color, background);
            color: color-get($color, contrast);
            &:hover{
                background-color: darken(color-get($color, background), $color-multiplier);
            }
        }
    }
    .#{$sdf}-#{$color}-inverse{
        background-color: color-get($color, contrast);
        color: color-get($color, background);
    }
    .#{$sdf}-#{$color}-font{
        color: color-get($color, font);
    }
}

@each $color in $color-types{
    .#{$sdf}-#{$color}{
        //make theme modifier when button is the same as block theme
        .#{$sdf}-btn.#{$sdf}-#{$color}{
            background-color: darken(color-get($color, background), $color-multiplier);
            &.#{$sdf}-hover, &.#{$sdf}-btn:hover, &.#{$sdf}-btn:focus{
                background-color: color-get($color, contrast);
                color: color-get($color, background);
            }
        }
        .#{$sdf}-btn.#{$sdf}-btn-outline.#{$sdf}-#{$color}{
            border: 1px solid color-get($color, contrast);
            color: color-get($color, contrast);
        }
        // make theme modifier when input is inside color block
        .#{$sdf}-input{
            background-color: color-get($color, background);
            color: color-get($color, contrast);
            @include input-placeholder(color-get($color, contrast));
            &:focus{
                @if $color == dark or $color == light or $color == default {
                    border-color: color-get(primary, background);
                } @else {
                    border-color: complement(color-get($color, background));
                }
            }
            &.#{$sdf}-input-outline-2x:focus{
                @if $color == dark or $color == light or $color == default {
                    box-shadow: 0 0 0 1px rgba(color-get(primary, background), 0.5);
                } @else {
                    box-shadow: 0 0 0 1px rgba(complement(color-get($color, background)), 0.5)
                }
            }
            &.#{$sdf}-input-outline-3x:focus{
                @if $color == dark or $color == light or $color == default {
                    box-shadow: 0 0 0 2px rgba(color-get(primary, background), 0.5);
                } @else {
                    box-shadow: 0 0 0 2px rgba(complement(color-get($color, background)), 0.5)
                }
            }
            &.#{$sdf}-input-outline-4x:focus{
                @if $color == dark or $color == light or $color == default {
                    box-shadow: 0 0 0 3px rgba(color-get(primary, background), 0.5);
                } @else {
                    box-shadow: 0 0 0 3px rgba(complement(color-get($color, background)), 0.5)
                }
            }
        }
        // make theme modifier when input addon is inside color block
        .#{$sdf}-input-addon, .#{$sdf}-input{
            border-color: rgba(color-get($color, contrast), $border-color-opacity);
        }
        // glow color
        .#{$sdf}-glow{
            box-shadow: 0 2px 2px 0 rgba(color-get($color, contrast),.15), 0 3px 1px -2px rgba(color-get($color, contrast),.2), 0 1px 5px 0 rgba(color-get($color, contrast),.1);
        }
    }
}


// outline buttons
.#{$sdf}-btn{
    &.#{$sdf}-btn-outline{
        @each $color in $color-types{
            &.#{$sdf}-#{$color}{
                background-color: transparent;
                border: 1px solid color-get($color, background);
                color: color-get($color, background);
                &:hover, &:active, &:focus{
                    background-color: color-get($color, background);
                    border: 1px solid color-get($color, background);
                    color: color-get($color, contrast);
                }
            }
            &.#{$sdf}-#{$color}-inverse{
                background-color: transparent;
                border: 1px solid color-get($color, contrast);
                color: color-get($color, contrast);
            }
        }
    }
}
